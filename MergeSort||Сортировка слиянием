void MergeSort(vector<int> &a, int start, int end) {
	if (end - start < 2) {
		return;
	}
	if (end - start == 2) {
		if (a[start] > a[start + 1]) {
			++ans;
			swap(a[start], a[start + 1]);
			return;
		}
	}
	int mid = start + (end - start) / 2;
	MergeSort(a, start, mid); 
	MergeSort(a, mid, end);
	vector<int> b;
	int b1 = start;
	int e1 = mid;
	int b2 = e1;
	bool flag = false;
	while (b.size() < end - start) {
		if (b1 >= e1 || (b2 < end && a[b2] <= a[b1])) {
			b.push_back(a[b2]);
			++b2;
		} else {
			b.push_back(a[b1]);
			++b1;
		}
	}
	for (int i = start; i < end; ++i) {
		a[i] = b[i - start];
	}
}
